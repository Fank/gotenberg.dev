"use strict";(self.webpackChunkgotenberg_dev=self.webpackChunkgotenberg_dev||[]).push([[681],{4137:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=u(n),d=r,h=m["".concat(s,".").concat(d)]||m[d]||c[d]||l;return n?a.createElement(h,o(o({ref:t},p),{},{components:n})):a.createElement(h,o({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var u=2;u<l;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},425:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294),r=n(6010);const l="tabItem_Ymn6";function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,o),hidden:n},t)}},3992:(e,t,n)=>{n.d(t,{Z:()=>N});var a=n(7462),r=n(7294),l=n(6010),o=n(2957),i=n(6775),s=n(5238),u=n(3609),p=n(2560);function c(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function m(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??c(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function d(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const a=(0,i.k6)(),l=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(l),(0,r.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(a.location.search);t.set(l,e),a.replace({...a.location,search:t.toString()})}),[l,a])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,l=m(e),[o,i]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:l}))),[s,u]=h({queryString:n,groupId:a}),[c,g]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,l]=(0,p.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&l.set(e)}),[n,l])]}({groupId:a}),f=(()=>{const e=s??c;return d({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{f&&i(f)}),[f]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!d({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),g(e)}),[u,g,l]),tabValues:l}}var f=n(1048);const b="tabList__CuJ",k="tabItem_LNqP";function v(e){let{className:t,block:n,selectedValue:i,selectValue:s,tabValues:u}=e;const p=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.o5)(),m=e=>{const t=e.currentTarget,n=p.indexOf(t),a=u[n].value;a!==i&&(c(t),s(a))},d=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const n=p.indexOf(e.currentTarget)+1;t=p[n]??p[0];break}case"ArrowLeft":{const n=p.indexOf(e.currentTarget)-1;t=p[n]??p[p.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:o}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>p.push(e),onKeyDown:d,onClick:m},o,{className:(0,l.Z)("tabs__item",k,o?.className,{"tabs__item--active":i===t})}),n??t)})))}function y(e){let{lazy:t,children:n,selectedValue:a}=e;const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function T(e){const t=g(e);return r.createElement("div",{className:(0,l.Z)("tabs-container",b)},r.createElement(v,(0,a.Z)({},e,t)),r.createElement(y,(0,a.Z)({},e,t)))}function N(e){const t=(0,f.Z)();return r.createElement(T,(0,a.Z)({key:String(t)},e))}},8327:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>u,toc:()=>c});var a=n(7462),r=(n(7294),n(4137)),l=n(3992),o=n(425);const i={id:"html",title:"HTML"},s=void 0,u={unversionedId:"html",id:"version-6.x/html",title:"HTML",description:"Gotenberg provides the endpoint /convert/html for HTML conversions.",source:"@site/versioned_docs/version-6.x/html.mdx",sourceDirName:".",slug:"/html",permalink:"/docs/6.x/html",draft:!1,editUrl:"https://github.com/gotenberg/gotenberg.dev/edit/main/versioned_docs/version-6.x/html.mdx",tags:[],version:"6.x",frontMatter:{id:"html",title:"HTML"},sidebar:"version-6.x",previous:{title:"Environment Variables",permalink:"/docs/6.x/environment_variables"},next:{title:"URL",permalink:"/docs/6.x/url"}},p={},c=[{value:"Basic",id:"basic",level:2},{value:"Header and footer",id:"header-and-footer",level:2},{value:"Assets",id:"assets",level:2},{value:"Paper size, margins, orientation, scaling",id:"paper-size-margins-orientation-scaling",level:2},{value:"Page ranges",id:"page-ranges",level:2},{value:"Wait delay",id:"wait-delay",level:2},{value:"Rpcc buffer size",id:"rpcc-buffer-size",level:2}],m={toc:c};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Gotenberg provides the endpoint ",(0,r.kt)("inlineCode",{parentName:"p"},"/convert/html")," for HTML conversions."),(0,r.kt)("p",null,"It accepts ",(0,r.kt)("inlineCode",{parentName:"p"},"POST")," requests with a ",(0,r.kt)("inlineCode",{parentName:"p"},"multipart/form-data")," Content-Type."),(0,r.kt)("h2",{id:"basic"},"Basic"),(0,r.kt)("p",null,"The only requirement is to send a file named ",(0,r.kt)("inlineCode",{parentName:"p"},"index.html"),": it is the file\nwhich will be converted to PDF."),(0,r.kt)("p",null,"For instance:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta charset="utf-8" />\n    <title>My PDF</title>\n  </head>\n  <body>\n    <h1>Hello world!</h1>\n  </body>\n</html>\n')),(0,r.kt)(l.Z,{defaultValue:"curl",values:[{label:"cURL",value:"curl"},{label:"Go",value:"go"},{label:"PHP",value:"php"}],mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"curl",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"curl --request POST \\\n     --url http://localhost:3000/convert/html \\\n     --header 'Content-Type: multipart/form-data' \\\n     --form files=@index.html \\\n     -o result.pdf\n"))),(0,r.kt)(o.Z,{value:"go",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'import "github.com/thecodingmachine/gotenberg-go-client/v7"\n\nc := &gotenberg.Client{Hostname: "http://localhost:3000"}\nindex, _ := gotenberg.NewDocumentFromPath("index.html", "/path/to/file")\nreq := gotenberg.NewHTMLRequest(index)\ndest := "result.pdf"\nc.Store(req, dest)\n'))),(0,r.kt)(o.Z,{value:"php",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"use TheCodingMachine\\Gotenberg\\Client;\nuse TheCodingMachine\\Gotenberg\\DocumentFactory;\nuse TheCodingMachine\\Gotenberg\\HTMLRequest;\n\n$client = new Client('http://localhost:3000', new \\Http\\Adapter\\Guzzle6\\Client());\n$index = DocumentFactory::makeFromPath('index.html', '/path/to/file');\n$request = new HTMLRequest($index);\n$dest = 'result.pdf';\n$client->store($request, $dest);\n")))),(0,r.kt)("h2",{id:"header-and-footer"},"Header and footer"),(0,r.kt)("p",null,"You may also add a header and/or a footer in the resulting PDF.\nRespectively, a file named ",(0,r.kt)("inlineCode",{parentName:"p"},"header.html")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"footer.html"),"."),(0,r.kt)("p",null,"Each of them ",(0,r.kt)("strong",{parentName:"p"},"has to be a complete HTML document"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<html>\n  <head>\n    <style>\n      body {\n        font-size: 8rem;\n        margin: 4rem auto;\n      }\n    </style>\n  </head>\n  <body>\n    <p><span class="pageNumber"></span> of <span class="totalPages"></span></p>\n  </body>\n</html>\n')),(0,r.kt)("p",null,"The following classes allow you to inject printing values:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"date"),": formatted print date"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"title"),": document title"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"pageNumber"),": current page number"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"totalPage"),": total pages in the document")),(0,r.kt)("p",null,"There are some limitations:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"JavaScript is not executed"),(0,r.kt)("li",{parentName:"ul"},"external resources are not loaded"),(0,r.kt)("li",{parentName:"ul"},"the CSS properties are independant of the ones used in the ",(0,r.kt)("inlineCode",{parentName:"li"},"index.html")," file"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"footer.html")," CSS properties override the ones from ",(0,r.kt)("inlineCode",{parentName:"li"},"header.html")),(0,r.kt)("li",{parentName:"ul"},"only fonts installed in the Docker image are loaded (see the ",(0,r.kt)("a",{parentName:"li",href:"fonts"},"fonts section"),")"),(0,r.kt)("li",{parentName:"ul"},"images only work using a ",(0,r.kt)("inlineCode",{parentName:"li"},"base64")," encoded source (",(0,r.kt)("inlineCode",{parentName:"li"},'<img src="data:image/png;base64, iVBORw0K... />'),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"background-color")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"color")," CSS properties require an additional ",(0,r.kt)("inlineCode",{parentName:"li"},"-webkit-print-color-adjust: exact")," CSS property in order to work")),(0,r.kt)(l.Z,{defaultValue:"curl",values:[{label:"cURL",value:"curl"},{label:"Go",value:"go"},{label:"PHP",value:"php"}],mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"curl",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"curl --request POST \\\n     --url http://localhost:3000/convert/html \\\n     --header 'Content-Type: multipart/form-data' \\\n     --form files=@index.html \\\n     --form files=@header.html \\\n     --form files=@footer.html \\\n     -o result.pdf\n"))),(0,r.kt)(o.Z,{value:"go",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'import "github.com/thecodingmachine/gotenberg-go-client/v7"\n\nc := &gotenberg.Client{Hostname: "http://localhost:3000"}\nindex, _ := gotenberg.NewDocumentFromPath("index.html", "/path/to/file")\nheader, _ := gotenberg.NewDocumentFromPath("header.html", "/path/to/file")\nfooter, _ := gotenberg.NewDocumentFromPath("footer.html", "/path/to/file")\nreq := gotenberg.NewHTMLRequest(index)\nreq.Header(header)\nreq.Footer(footer)\ndest := "result.pdf"\nc.Store(req, dest)\n'))),(0,r.kt)(o.Z,{value:"php",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"use TheCodingMachine\\Gotenberg\\Client;\nuse TheCodingMachine\\Gotenberg\\DocumentFactory;\nuse TheCodingMachine\\Gotenberg\\HTMLRequest;\n\n$client = new Client('http://localhost:3000', new \\Http\\Adapter\\Guzzle6\\Client());\n$index = DocumentFactory::makeFromPath('index.html', '/path/to/file');\n$header = DocumentFactory::makeFromPath('header.html', '/path/to/file');\n$footer = DocumentFactory::makeFromPath('footer.html', '/path/to/file');\n$request = new HTMLRequest($index);\n$request->setHeader($header);\n$request->setFooter($footer);\n$dest = 'result.pdf';\n$client->store($request, $dest);\n")))),(0,r.kt)("h2",{id:"assets"},"Assets"),(0,r.kt)("p",null,"You may also send additional files. For instance: images, fonts, stylesheets and so on."),(0,r.kt)("p",null,"The only requirement is to make sure that their paths\nare on the same level as the ",(0,r.kt)("inlineCode",{parentName:"p"},"index.html")," file."),(0,r.kt)("p",null,"In other words, this will work:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta charset="utf-8" />\n    <title>My PDF</title>\n  </head>\n  <body>\n    <h1>Hello world!</h1>\n    <img src="img.png" />\n  </body>\n</html>\n')),(0,r.kt)("p",null,"But this won't:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta charset="utf-8" />\n    <title>My PDF</title>\n  </head>\n  <body>\n    <h1>Hello world!</h1>\n    <img src="/foo/img.png" />\n  </body>\n</html>\n')),(0,r.kt)("p",null,"You may also use ",(0,r.kt)("em",{parentName:"p"},"remote")," paths for Google fonts, images and so on."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"If you want to install fonts directly in the Gotenberg Docker image,\nsee to the ",(0,r.kt)("a",{parentName:"p",href:"fonts"},"fonts section"),".")),(0,r.kt)(l.Z,{defaultValue:"curl",values:[{label:"cURL",value:"curl"},{label:"Go",value:"go"},{label:"PHP",value:"php"}],mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"curl",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"curl --request POST \\\n     --url http://localhost:3000/convert/html \\\n     --header 'Content-Type: multipart/form-data' \\\n     --form files=@index.html \\\n     --form files=@style.css \\\n     --form files=@img.png \\\n     --form files=@font.woff \\\n     -o result.pdf\n"))),(0,r.kt)(o.Z,{value:"go",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'import "github.com/thecodingmachine/gotenberg-go-client/v7"\n\nc := &gotenberg.Client{Hostname: "http://localhost:3000"}\nindex, _ := gotenberg.NewDocumentFromPath("index.html", "/path/to/file")\nstyle, _ := gotenberg.NewDocumentFromPath("style.css", "/path/to/file")\nimg, _ := gotenberg.NewDocumentFromPath("img.png", "/path/to/file")\nfont, _ := gotenberg.NewDocumentFromPath("font.woff", "/path/to/file")\nreq := gotenberg.NewHTMLRequest(index)\nreq.Assets(style, img, font)\ndest := "result.pdf"\nc.Store(req, dest)\n'))),(0,r.kt)(o.Z,{value:"php",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"use TheCodingMachine\\Gotenberg\\Client;\nuse TheCodingMachine\\Gotenberg\\DocumentFactory;\nuse TheCodingMachine\\Gotenberg\\HTMLRequest;\n\n$client = new Client('http://localhost:3000', new \\Http\\Adapter\\Guzzle6\\Client());\n$index = DocumentFactory::makeFromPath('index.html', '/path/to/file');\n$assets = [\n    DocumentFactory::makeFromPath('style.css', '/path/to/file'),\n    DocumentFactory::makeFromPath('img.png', '/path/to/file'),\n    DocumentFactory::makeFromPath('font.woff', '/path/to/file'),\n];\n$request = new HTMLRequest($index);\n$request->setAssets($assets);\n$dest = 'result.pdf';\n$client->store($request, $dest);\n")))),(0,r.kt)("h2",{id:"paper-size-margins-orientation-scaling"},"Paper size, margins, orientation, scaling"),(0,r.kt)("p",null,"You may also customize the resulting PDF format."),(0,r.kt)("p",null,"By default, it will be rendered with ",(0,r.kt)("inlineCode",{parentName:"p"},"A4")," size, ",(0,r.kt)("inlineCode",{parentName:"p"},"1 inch")," margins and ",(0,r.kt)("inlineCode",{parentName:"p"},"portrait")," orientation and 100% (",(0,r.kt)("inlineCode",{parentName:"p"},"1.0"),") page scale."),(0,r.kt)("p",null,"::caution"),(0,r.kt)("p",null,"Paper size and margins have to be provided in ",(0,r.kt)("inlineCode",{parentName:"p"},"inches"),". Same for margins."),(0,r.kt)("p",null,":::"),(0,r.kt)(l.Z,{defaultValue:"curl",values:[{label:"cURL",value:"curl"},{label:"Go",value:"go"},{label:"PHP",value:"php"}],mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"curl",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"curl --request POST \\\n     --url http://localhost:3000/convert/html \\\n     --header 'Content-Type: multipart/form-data' \\\n     --form files=@index.html \\\n     --form files=@style.css \\\n     --form files=@img.png \\\n     --form files=@font.woff \\\n     -o result.pdf\n"))),(0,r.kt)(o.Z,{value:"go",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'import "github.com/thecodingmachine/gotenberg-go-client/v7"\n\nc := &gotenberg.Client{Hostname: "http://localhost:3000"}\nindex, _ := gotenberg.NewDocumentFromPath("index.html", "/path/to/file")\nreq := gotenberg.NewHTMLRequest(index)\nreq.PaperSize(gotenberg.A4)\nreq.Margins(gotenberg.NoMargins)\nreq.Landscape(true)\nreq.Scale(0.75)\ndest := "result.pdf"\nc.Store(req, dest)\n'))),(0,r.kt)(o.Z,{value:"php",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"use TheCodingMachine\\Gotenberg\\Client;\nuse TheCodingMachine\\Gotenberg\\DocumentFactory;\nuse TheCodingMachine\\Gotenberg\\HTMLRequest;\nuse TheCodingMachine\\Gotenberg\\Request;\n\n$client = new Client('http://localhost:3000', new \\Http\\Adapter\\Guzzle6\\Client());\n$index = DocumentFactory::makeFromPath('index.html', '/path/to/file');\n$request = new HTMLRequest($index);\n$request->setPaperSize(Request::A4);\n$request->setMargins(Request::NO_MARGINS);\n$request->setLandscape(true);\n$request->setScale(0.75);\n$dest = 'result.pdf';\n$client->store($request, $dest);\n")))),(0,r.kt)("h2",{id:"page-ranges"},"Page ranges"),(0,r.kt)("p",null,"You may specify the page ranges to convert."),(0,r.kt)("p",null,"The format is the same as the one from the print options\nof Google Chrome, e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"1-5,8,11-13"),"."),(0,r.kt)(l.Z,{defaultValue:"curl",values:[{label:"cURL",value:"curl"},{label:"Go",value:"go"},{label:"PHP",value:"php"}],mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"curl",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"curl --request POST \\\n     --url http://localhost:3000/convert/html \\\n     --header 'Content-Type: multipart/form-data' \\\n     --form files=@index.html \\\n     --form pageRanges='1-3,5' \\\n     -o result.pdf\n"))),(0,r.kt)(o.Z,{value:"go",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'import "github.com/thecodingmachine/gotenberg-go-client/v7"\n\nc := &gotenberg.Client{Hostname: "http://localhost:3000"}\nindex, _ := gotenberg.NewDocumentFromPath("index.html", "/path/to/file")\nreq := gotenberg.NewHTMLRequest(index)\nreq.PageRanges("1-3,5")\ndest := "result.pdf"\nc.Store(req, dest)\n'))),(0,r.kt)(o.Z,{value:"php",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"use TheCodingMachine\\Gotenberg\\Client;\nuse TheCodingMachine\\Gotenberg\\DocumentFactory;\nuse TheCodingMachine\\Gotenberg\\HTMLRequest;\nuse TheCodingMachine\\Gotenberg\\Request;\n\n$client = new Client('http://localhost:3000', new \\Http\\Adapter\\Guzzle6\\Client());\n$index = DocumentFactory::makeFromPath('index.html', '/path/to/file');\n$request = new HTMLRequest($index);\n$request->setPageRanges('1-3,5');\n$dest = 'result.pdf';\n$client->store($request, $dest);\n")))),(0,r.kt)("h2",{id:"wait-delay"},"Wait delay"),(0,r.kt)("p",null,"In some cases, you may want to wait a certain amount of time to make sure the\npage you're trying to generate is fully rendered. For instance, if your page relies\na lot on JavaScript for rendering."),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"The wait delay is a duration in ",(0,r.kt)("strong",{parentName:"p"},"seconds")," (e.g ",(0,r.kt)("inlineCode",{parentName:"p"},"2.5")," for 2.5 seconds).")),(0,r.kt)(l.Z,{defaultValue:"curl",values:[{label:"cURL",value:"curl"},{label:"Go",value:"go"},{label:"PHP",value:"php"}],mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"curl",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"curl --request POST \\\n     --url http://localhost:3000/convert/html \\\n     --header 'Content-Type: multipart/form-data' \\\n     --form files=@index.html \\\n     --form waitDelay=5.5 \\\n     -o result.pdf\n"))),(0,r.kt)(o.Z,{value:"go",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'import "github.com/thecodingmachine/gotenberg-go-client/v7"\n\nc := &gotenberg.Client{Hostname: "http://localhost:3000"}\nindex, _ := gotenberg.NewDocumentFromPath("index.html", "/path/to/file")\nreq := gotenberg.NewHTMLRequest(index)\nreq.WaitDelay(5.5)\ndest := "result.pdf"\nc.Store(req, dest)\n'))),(0,r.kt)(o.Z,{value:"php",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"use TheCodingMachine\\Gotenberg\\Client;\nuse TheCodingMachine\\Gotenberg\\DocumentFactory;\nuse TheCodingMachine\\Gotenberg\\HTMLRequest;\nuse TheCodingMachine\\Gotenberg\\Request;\n\n$client = new Client('http://localhost:3000', new \\Http\\Adapter\\Guzzle6\\Client());\n$index = DocumentFactory::makeFromPath('index.html', '/path/to/file');\n$request = new HTMLRequest($index);\n$request->setWaitDelay(5.5);\n$dest = 'result.pdf';\n$client->store($request, $dest);\n")))),(0,r.kt)("h2",{id:"rpcc-buffer-size"},"Rpcc buffer size"),(0,r.kt)("p",null,"The API might return a ",(0,r.kt)("inlineCode",{parentName:"p"},"400")," HTTP code with the message ",(0,r.kt)("inlineCode",{parentName:"p"},"increase the Google Chrome rpcc buffer size"),"."),(0,r.kt)("p",null,"If so, you may increase this buffer size with a form field named ",(0,r.kt)("inlineCode",{parentName:"p"},"googleChromeRpccBufferSize"),"."),(0,r.kt)("p",null,"It takes an int as value (e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"1048576")," for 1 MB).\nThe hard limit is 100 MB and is defined by Google Chrome itself."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"You may also define this value globally: see the ",(0,r.kt)("a",{parentName:"p",href:"environment_variables#default-google-chrome-rpcc-buffer-size"},"environment variables")," section.")),(0,r.kt)(l.Z,{defaultValue:"curl",values:[{label:"cURL",value:"curl"},{label:"Go",value:"go"},{label:"PHP",value:"php"}],mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"curl",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"curl --request POST \\\n     --url http://localhost:3000/convert/html \\\n     --header 'Content-Type: multipart/form-data' \\\n     --form files=@index.html \\\n     --form googleChromeRpccBufferSize=1048576 \\\n     -o result.pdf\n"))),(0,r.kt)(o.Z,{value:"go",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'import "github.com/thecodingmachine/gotenberg-go-client/v7"\n\nc := &gotenberg.Client{Hostname: "http://localhost:3000"}\nindex, _ := gotenberg.NewDocumentFromPath("index.html", "/path/to/file")\nreq := gotenberg.NewHTMLRequest(index)\nreq.GoogleChromeRpccBufferSize(1048576)\ndest := "result.pdf"\nc.Store(req, dest)\n'))),(0,r.kt)(o.Z,{value:"php",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"use TheCodingMachine\\Gotenberg\\Client;\nuse TheCodingMachine\\Gotenberg\\DocumentFactory;\nuse TheCodingMachine\\Gotenberg\\HTMLRequest;\nuse TheCodingMachine\\Gotenberg\\Request;\n\n$client = new Client('http://localhost:3000', new \\Http\\Adapter\\Guzzle6\\Client());\n$index = DocumentFactory::makeFromPath('index.html', '/path/to/file');\n$request = new HTMLRequest($index);\n$request->setGoogleChromeRpccBufferSize(1048576);\n$dest = 'result.pdf';\n$client->store($request, $dest);\n")))))}d.isMDXComponent=!0}}]);